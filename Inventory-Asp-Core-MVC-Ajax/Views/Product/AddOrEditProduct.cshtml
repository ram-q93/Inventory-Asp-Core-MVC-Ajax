@model Inventory_Asp_Core_MVC_Ajax.Models.Classes.ProductModel
@{
    ViewData["Title"] = "Edit";
    Layout = null;
}

<div class="row">
    <div class="col-md-12">
        <form asp-controller="Product" asp-action="AddOrEditProduct" 
              onsubmit="return jQueryAjaxPostToAddOrEditProduct(this);" autocomplete="off">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <input type="hidden" asp-for="Id" />
            <input type="hidden" asp-for="StorageId" />
            <input type="hidden" asp-for="@Model.ImageModel" />
            <div class="form-row">
                <div class="form-group col-md-6">
                    <label asp-for="Name" class="control-label"></label>
                    <input asp-for="Name" type="text" class="form-control">
                    <span asp-validation-for="Name" class="text-danger"></span>
                </div>
                <div class="form-group col-md-6">
                    <label asp-for="SupplierId" class="control-label">Choose Supplier</label>
                    <select asp-for="SupplierId" class="form-control" onClick="GetSupplierDropDownList()">
                        new SelectList(teachers,"ID","FullName")</select>
                    <span asp-validation-for="SupplierId" class="text-danger"></span>
                </div>
            </div>
            <div class="form-row">
                <div class="form-group col-md-6">
                    <label asp-for="Barcode" class="control-label"></label>
                    <input asp-for="Barcode" type="text" class="form-control">
                    <span asp-validation-for="Barcode" class="text-danger"></span>
                </div>
                <div class="form-group col-md-6">
                    <label asp-for="Type" class="control-label"></label>
                    <input asp-for="Type" type="text" class="form-control">
                    <span asp-validation-for="Type" class="text-danger"></span>
                </div>
            </div>
            <div class="form-row">
                <div class="form-group col-md-4">
                    <label asp-for="Quantity" class="control-label"></label>
                    <input asp-for="Quantity" type="number" class="form-control">
                    <span asp-validation-for="Quantity" class="text-danger"></span>
                </div>
                <div class="form-group col-md-4">
                    <label asp-for="IsAvailable" class="control-label"></label>
                    <input asp-for="IsAvailable" type="checkbox" class="form-control">
                    <span asp-validation-for="IsAvailable" class="text-danger"></span>
                </div>
                <div class="form-group col-md-4">
                    <label asp-for="Price" class="control-label"></label>
                    <input asp-for="Price" type="text" class="form-control">
                    <span asp-validation-for="Price" class="text-danger"></span>
                </div>
            </div>
            <div class="form-row">
                <div class="form-group col-md-12">
                    <label asp-for="Description" class="control-label"></label>
                    <textarea asp-for="Description" class="form-control" rows="2"> </textarea>
                </div>
            </div>
            <div class="form-row">
                <div class="form-group col-md-4">
                    <input type="file" accept="image/*" id="file-id" name="file"
                           multiple="multiple" onchange="loadFile(event)" />
                    <img id="output" />
                </div>
            </div>
            <br />
            <div class="form-group">
                <input type="submit" value="Submit" class="btn btn-success text-white btn-lg btn-block" />
            </div>
        </form>
    </div>
</div>

<script>
    var loadFile = function (event) {
        var output = document.getElementById('output');
        output.src = URL.createObjectURL(event.target.files[0]);
        output.onload = function () {
            URL.revokeObjectURL(output.src) // free memory
        }
    };
</script>


@section Scripts{
    @{ await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}