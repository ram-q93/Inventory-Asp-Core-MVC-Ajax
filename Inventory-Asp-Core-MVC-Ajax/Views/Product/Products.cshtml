
@model Inventory_Asp_Core_MVC_Ajax.Models.Classes.StorageModel
@{
    var product = Model.ProductModels.First();
    ViewData["Title"] = "Products";
}

<div class="form-row">
    <div class="form-group col-md-3">
        <h2>Product Table</h2>
    </div>
    <div class="form-group col-md-2">
        <a asp-controller="Product" asp-action="CreateProduct" asp-route-storeId="@Model.Id"
           class="btn btn-success"> Add New Product</a>
    </div>
    <div class="form-group col-md-2">
        <a asp-controller="Storage" asp-action="Storages" 
           class="btn btn-primary ">Back to Store Table</a>
    </div>
</div>

@* For displaying Store info*@
<dv>
    <div class="form-row">
        <div class="form-group col-md-6">
            <b>Store @Html.DisplayNameFor(model => model.Name) :</b> @Html.DisplayFor(modelItem => modelItem.Name)
        </div>
        <div class="form-group col-md-6">
            <b>Store @Html.DisplayNameFor(model => model.Phone)  : </b> @Html.DisplayFor(modelItem => modelItem.Phone)
        </div>
    </div>
    <b>@Html.DisplayNameFor(model => model.Address)  : </b> @Html.DisplayFor(modelItem => modelItem.Address)
</dv>
<br />
<br />

@* For displaying products *@
<table class="table table-striped">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(m => product.Name)
            </th>
            <th>
                @Html.DisplayNameFor(m => product.Barcode)
            </th>
            <th>
                @Html.DisplayNameFor(m => product.Type)
            </th>
            <th>
                @Html.DisplayNameFor(m => product.Quantity)
            </th>
            <th>
                @Html.DisplayNameFor(m => product.IsAvailable)
            </th>
            <th>
                @Html.DisplayNameFor(m => product.Price)
            </th>
            <th>
                View Details
            </th>
            <th>
                Edit
            </th>
            <th>
                Delete
            </th>
        </tr>
    </thead>
    <tbody>
        @foreach (var pro in Model.ProductModels)
        {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => pro.Name)
            </td>
            <td>
                @Html.DisplayFor(modelItem => pro.Barcode)
            </td>
            <td>
                @Html.DisplayFor(modelItem => pro.Type)
            </td>
            <td>
                @Html.DisplayFor(modelItem => pro.Quantity)
            </td>
            <td>
                @Html.DisplayFor(modelItem => pro.IsAvailable)
            </td>
            <td>
                @Html.DisplayFor(modelItem => pro.Price)
            </td>
            <td>
                <a asp-controller="Image" asp-action="ProductImages" asp-route-productId="@pro.Id" class="btn btn-info">Details</a>
            </td>
            <td>
                <a asp-controller="Product" asp-action="EditProduct" asp-route-id="@pro.Id" class="btn btn-secondary">Edit</a>
            </td>
            @* @if (User.Identity.IsAuthenticated)*@
            <td>
                <a asp-controller="Product" asp-action="DeleteProduct" asp-route-id="@pro.Id" class="btn btn-danger">Delete</a>
            </td>
        </tr>
        }
    </tbody>
</table>
