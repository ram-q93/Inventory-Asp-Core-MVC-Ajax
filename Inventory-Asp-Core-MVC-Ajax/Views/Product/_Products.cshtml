@using Inventory_Asp_Core_MVC_Ajax.Businesses
@model Inventory_Asp_Core_MVC_Ajax.Models.Classes.ProductFilterModel
@{
    var Index = (Model.ProductPagedList.PageNumber * Model.ProductPagedList.PageSize) - (Model.ProductPagedList.PageSize - 1);
}

@* For displaying products *@
@if (Model.ProductPagedList.Count() == 0)
{
    <div class="alert alert-info">No Products Availale</div> }
else
{
    var FirstProduct = Model.ProductPagedList.First();
    
    <div class="container-fluid">
        <table class="table">
            <thead>
                <tr>
                    <th>
                        #
                    </th>
                    <th>
                        <label asp-for="@FirstProduct.Name"></label>
                    </th>
                    <th>
                        <label asp-for="@FirstProduct.Quantity"></label>
                    </th>
                    <th>
                        <label asp-for="@FirstProduct.IsAvailable"></label>
                    </th>
                    <th>
                        <label asp-for="@FirstProduct.Price"></label>
                    </th>
                    <th>
                        <a onclick="showProductInPopup('@Url.Action("AddOrEditProduct", "Product",
                                               new { id = 0}, Context.Request.Scheme)', 'New Product')"
                           class="btn btn-success text-white"><i class="fas fa-random"></i>New Product</a>
                    </th>
                </tr>
            </thead>
            <tbody>
                @foreach (var p in Model.ProductPagedList)
                {
                    <tr>
                        <td>
                            @(Index++)
                        </td>
                        <td>
                            @Html.DisplayFor(m => p.Name)
                        </td>
                        <td>
                            @Html.DisplayFor(m => p.Quantity)
                        </td>
                        <td>
                            @Html.DisplayFor(m => p.IsAvailable)
                        </td>
                        <td>
                            @Html.DisplayFor(m => p.Price)
                        </td>
                        @*<td>
                                <a asp-controller="Product" asp-action="Products" asp-route-storageId="@s.Id" class="btn btn-info">View Products</a>
                            </td>*@
                        <td>
                            <a onclick="showProductInPopup('@Url.Action("AddOrEditProduct", "Product",
                                       new { id = p.Id}, Context.Request.Scheme)', 'Update Product')"
                               class="btn btn-warning text-white"><i class="fas fa-pencil-alt"></i></a>
                            <form asp-controller="Product" asp-action="DeleteProduct" asp-route-id="@p.Id"
                                  onsubmit="return jQueryAjaxDeleteProduct(this)" class="d-inline">
                                <input type="hidden" asp-for="@p.Id" />
                                <input type="submit" value="Delete" class="btn btn-danger" />
                            </form>
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>}

<br />
<p class="align-items-center">
    <pager class="pager-container" list="@Model.ProductPagedList"
           options="@SitePagedListRenderOptions.Boostrap4" asp-action="Products" asp-controller="Product"
           asp-route-query="@Model.SearchQuery" asp-route-storageId="@Model.ProductPagedList.Count == 0 ? 0 : Model.ProductPagedList?.First()?.StorageId" />
</p>


