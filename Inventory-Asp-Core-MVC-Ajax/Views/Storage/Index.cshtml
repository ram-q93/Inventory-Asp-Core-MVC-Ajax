@using PagedList.Core.Mvc
@using Inventory_Asp_Core_MVC_Ajax.Pagination

@{ ViewData["Title"] = "Search Page"; }
@{ var hasResult = Model.StorageModels != null && Model.StorageModels.TotalItemCount > 0; }
<div class="text-center">
    <h1 class="display-4">Search Result</h1>
    @if (hasResult)
    {
<p>Showing items @Model.StorageModels.FirstItemOnPage through @Model.StorageModels.LastItemOnPage of @Model.StorageModels.TotalItemCount results for <strong>"@Model.SearchQuery"</strong>.</p> }
            else
            {
<p>No matches were found for <strong>"@Model.SearchQuery"</strong>.</p>}
</div>
@if (hasResult)
{
<div class="row">
    <div class="col-12">
        @foreach (var item in Model.StorageModels)
        {
<p>
    <h5><a href="#">@Html.Raw(item)</a></h5>
</p>
                    <hr />}

        <p><h6>Minimal</h6><pager class="pager-container" list="@Model.StorageModels" options="@PagedListRenderOptions.Bootstrap4Minimal" asp-action="Index" asp-controller="Storage" asp-route-query="@Model.SearchQuery" /></p>

    </div>
</div>}